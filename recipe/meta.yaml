{% set name = "guardian" %}
{% set version = "1.5.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://git.ligo.org/cds/software/{{ name }}/-/archive/{{ version }}/{{ name }}-{{ version }}.tar.gz
  sha256: 4f55b477a852abf2c8db9da88012ab2b273d5fdecf60d3e1eaa64c9f0735626e
  patches:
    # replace most of the scripts with entry points
    - entry-points.patch
    # insert the anaconda1 prefix placeholder into the guardlog script
    - guardlog-prefix.patch  # [not win]
    # don't install guardlog at all on windows (it won't work)
    - no-guardlog.patch  # [win]

build:
  entry_points:
    - guardian = guardian.__main__:main
    - guardmedm = guardian.medm.__main__:main
    - guardutil = guardian.guardutil:main
    - guardctrl = guardctrl.__main__:main
  number: 3
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - pip
    - python
    - setuptools
  run:
    - gpstime
    - matplotlib-base
    - networkx
    - numpy
    - pcaspy
    - pydotplus
    - pyepics
    - python
    - python-dateutil
    - setproctitle
    - termcolor

test:
  imports:
    - guardctrl
    - guardian
  commands:
    - guardian --help
    - guardutil --help

about:
  home: https://git.ligo.org/cds/guardian/
  dev_url: https://git.ligo.org/cds/guardian/
  doc_url: https://docs.ligo.org/cds/guardian/
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: COPYING-GPL-3
  summary: aLIGO Guardian
  description: |
    Designed by and for the Advanced LIGO project, Guardian is a flexible,
    modular, distributed, hierarchical, state machine automation platform.
    It is not specific to aLIGO, though; it should be useful for an large
    or small experiment that could benefit from state-machine supervisory
    control.

extra:
  recipe-maintainers:
    - duncanmmacleod
    - jrollins
